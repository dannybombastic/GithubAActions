# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    - name: Install dependencies
      run: npm install

#    - name: Run tests
#      run: npm run test

    - name: Build
      run: npm run build
    - name: Prepare SSH to work with the remote server
      run: |
          cd ~ && mkdir .ssh &&
          touch ~/.ssh/known_hosts &&
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key &&
          chmod 600 ~/.ssh/deploy_key 
    - name: scp-deployer
      uses: appleboy/scp-action@master
      with:
        # ssh remote host
        host:  ${{ secrets.REMOTE_HOST }}
        # ssh remote user
        username: ${{ secrets.REMOTE_USER }}
        # ssh remote port
        port: 22 # optional, default is 22
        password: ${{ secrets.REMOTE_PASS }}
        # content of ssh private key. ex raw content of ~/.ssh/id_rsa
        # key: ${{ secrets.SSH_PRIVATE_KEY }} # optional
        # ssh remote password
        # source to copy from
        source: "dist/*" # optional
        # destination to download on server
        target: "/var/www/html/dani" # optional
        
    - name: SSH Command
      uses: D3rHase/ssh-command-action@v0.2.1
      with:
        # hostname / IP of the server
        HOST: ${{ secrets.REMOTE_HOST }}
        # ssh port of the server
        PORT: 22 # optional, default is 22
        # user of the server
        USER: ${{ secrets.REMOTE_USER }}
        # private ssh key registered on the server
        PRIVATE_SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        # command to be executed
        COMMAND: chmod 774 /var/www/html/dani/dist # optional 
      

